un-portable code:

	texture loading.  
		load texture from file then convert to openGL format
		see gl_code.cpp 
			Java_com_neusoft_particle_ObjectJNI_jni_1pushTexture

	loading shaders from text files
		use standard c/c++ file io to load shaders from disk

	generating the rotation/orientation matrix
		see particle.java -- public void onSensorChanged(SensorEvent event)

		need to convert system pointer movement into an orientation matrix

	tap to cycle draw modes.
		use mouse click?


todo:

	* changeLookAt() is called once per frame, probably only need to multiply orientation matrix, 
		store other values (as members):
			target, upvector, camerapos

	x fix back/front facing triangles
	~ draw diagram of camera setup, tape to wall
	x particles seem to be clipped, not drawing emitter location (or color is black?)

	non application specific tasks:
		x setup github source control, task log
		x initialize context. 
		x load, compile, link shaders
			gl_code.cpp - void sceneManager::createProgram l.809

		* load textures from system, poke into GL texture unit(s)
		* configure game/render loop


-------------

NORMAL SEQUENCE FOR CHECKINS:

1) change necessary files
2) git add .
3) git commit -m"description"
4) git push -u origin master



